// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Trader;

#nullable disable

namespace Trader.Migrations
{
    [DbContext(typeof(TradingContext))]
    [Migration("20240102150314_AddSymbolSector2")]
    partial class AddSymbolSector2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Trader.Candle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ClosePercentChange")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<decimal>("Volume")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Symbol", "Date")
                        .IsUnique();

                    b.ToTable("Candles");
                });

            modelBuilder.Entity("Trader.Dividends.Dividend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CandleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Percent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("Id");

                    b.HasIndex("CandleId");

                    b.HasIndex("Symbol", "ExDate")
                        .IsUnique();

                    b.ToTable("Dividends");
                });

            modelBuilder.Entity("Trader.SymbolSector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SectorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("Id");

                    b.HasIndex("Symbol")
                        .IsUnique();

                    b.ToTable("SymbolSectors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SectorName = "Energy",
                            Symbol = "XOM"
                        },
                        new
                        {
                            Id = 2,
                            SectorName = "Energy",
                            Symbol = "CVX"
                        },
                        new
                        {
                            Id = 3,
                            SectorName = "Consumer Defensive",
                            Symbol = "KO"
                        },
                        new
                        {
                            Id = 4,
                            SectorName = "Consumer cyclical",
                            Symbol = "MCD"
                        },
                        new
                        {
                            Id = 5,
                            SectorName = "Communication services",
                            Symbol = "T"
                        },
                        new
                        {
                            Id = 6,
                            SectorName = "Communication services",
                            Symbol = "VZ"
                        },
                        new
                        {
                            Id = 7,
                            SectorName = "Healthcare",
                            Symbol = "JNJ"
                        },
                        new
                        {
                            Id = 8,
                            SectorName = "Healthcare",
                            Symbol = "PFE"
                        },
                        new
                        {
                            Id = 9,
                            SectorName = "Technology",
                            Symbol = "IBM"
                        },
                        new
                        {
                            Id = 10,
                            SectorName = "Healthcare",
                            Symbol = "ABBV"
                        },
                        new
                        {
                            Id = 11,
                            SectorName = "Consumer Defensive",
                            Symbol = "TGT"
                        },
                        new
                        {
                            Id = 12,
                            SectorName = "Energy",
                            Symbol = "COP"
                        },
                        new
                        {
                            Id = 13,
                            SectorName = "Consumer cyclical",
                            Symbol = "F"
                        },
                        new
                        {
                            Id = 14,
                            SectorName = "Consumer cyclical",
                            Symbol = "HD"
                        },
                        new
                        {
                            Id = 15,
                            SectorName = "Financial",
                            Symbol = "JPM"
                        },
                        new
                        {
                            Id = 16,
                            SectorName = "Financial",
                            Symbol = "BAC"
                        },
                        new
                        {
                            Id = 17,
                            SectorName = "Consumer cyclical",
                            Symbol = "SBUX"
                        },
                        new
                        {
                            Id = 18,
                            SectorName = "Consumer Defensive",
                            Symbol = "PG"
                        },
                        new
                        {
                            Id = 19,
                            SectorName = "Consumer Defensive",
                            Symbol = "CL"
                        },
                        new
                        {
                            Id = 20,
                            SectorName = "Consumer Defensive",
                            Symbol = "PEP"
                        },
                        new
                        {
                            Id = 21,
                            SectorName = "Consumer Defensive",
                            Symbol = "PM"
                        });
                });

            modelBuilder.Entity("Trader.Dividends.Dividend", b =>
                {
                    b.HasOne("Trader.Candle", "Candle")
                        .WithMany()
                        .HasForeignKey("CandleId");

                    b.Navigation("Candle");
                });
#pragma warning restore 612, 618
        }
    }
}
